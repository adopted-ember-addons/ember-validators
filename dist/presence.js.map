{"version":3,"file":"presence.js","sources":["../src/presence.ts"],"sourcesContent":["import { assert } from '@ember/debug';\nimport { isPresent, isEmpty } from '@ember/utils';\nimport unwrapProxy from './utils/unwrap-proxy.ts';\nimport validationError, {\n  type IValidationError,\n} from './utils/validation-error.ts';\n\ntype IOptions = {\n  presence: boolean;\n  ignoreBlank?: boolean;\n};\n\n/**\n *  @class Presence\n *  @module Validators\n */\n\n/**\n * @method validate\n * @param {Any} value\n * @param {Object} options\n * @param {Boolean} options.presence If true validates that the given value is not empty,\n *                                   if false, validates that the given value is empty.\n * @param {Boolean} options.ignoreBlank If true, treats an empty or whitespace string as not present\n * @param {Object} model\n * @param {String} attribute\n */\nexport default function validatePresence(\n  value: unknown,\n  options: IOptions,\n  model: object,\n  attribute: string,\n): true | IValidationError<unknown, IOptions> {\n  const { presence, ignoreBlank } = options;\n  const v = unwrapProxy(value);\n  const _isPresent = ignoreBlank ? isPresent(v) : !isEmpty(v);\n\n  assert(\n    `[validator:presence] [${attribute}] option 'presence' is required`,\n    isPresent(presence),\n  );\n\n  if (presence === true && !_isPresent) {\n    return validationError('blank', value, options);\n  }\n\n  if (presence === false && _isPresent) {\n    return validationError('present', value, options);\n  }\n\n  return true;\n}\n"],"names":["validatePresence","value","options","model","attribute","presence","ignoreBlank","v","unwrapProxy","_isPresent","isPresent","isEmpty","assert","validationError"],"mappings":";;;;;AAYA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,gBAAgBA,CACtCC,KAAc,EACdC,OAAiB,EACjBC,KAAa,EACbC,SAAiB,EAC2B;EAC5C,MAAM;IAAEC,QAAQ;AAAEC,IAAAA;AAAY,GAAC,GAAGJ,OAAO;AACzC,EAAA,MAAMK,CAAC,GAAGC,WAAW,CAACP,KAAK,CAAC;AAC5B,EAAA,MAAMQ,UAAU,GAAGH,WAAW,GAAGI,SAAS,CAACH,CAAC,CAAC,GAAG,CAACI,OAAO,CAACJ,CAAC,CAAC;EAE3DK,MAAM,CACJ,yBAAyBR,SAAS,CAAA,+BAAA,CAAiC,EACnEM,SAAS,CAACL,QAAQ,CACpB,CAAC;AAED,EAAA,IAAIA,QAAQ,KAAK,IAAI,IAAI,CAACI,UAAU,EAAE;AACpC,IAAA,OAAOI,eAAe,CAAC,OAAO,EAAEZ,KAAK,EAAEC,OAAO,CAAC;AACjD;AAEA,EAAA,IAAIG,QAAQ,KAAK,KAAK,IAAII,UAAU,EAAE;AACpC,IAAA,OAAOI,eAAe,CAAC,SAAS,EAAEZ,KAAK,EAAEC,OAAO,CAAC;AACnD;AAEA,EAAA,OAAO,IAAI;AACb;;;;"}