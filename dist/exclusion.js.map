{"version":3,"file":"exclusion.js","sources":["../src/exclusion.ts"],"sourcesContent":["import { isEmpty, typeOf } from '@ember/utils';\nimport { assert } from '@ember/debug';\nimport validationError, {\n  type IValidationError,\n} from './utils/validation-error.ts';\n\ninterface IOptions {\n  allowBlank?: boolean;\n  in?: unknown[];\n  range: [min: number, max: number];\n}\n\n/**\n *  @class Exclusion\n *  @module Validators\n */\n\n/**\n * @method validate\n * @param {Any} value\n * @param {Object} options\n * @param {Boolean} options.allowBlank If true, skips validation if the value is empty\n * @param {Array} options.in The list of values this attribute should not be\n * @param {Array} options.range The range in which the attribute's value should not reside in\n * @param {Object} model\n * @param {String} attribute\n */\nexport default function validateExclusion(\n  value: unknown,\n  options: IOptions,\n  model: object,\n  attribute: string,\n): true | IValidationError<unknown, IOptions> {\n  const array = options.in;\n  const { range, allowBlank } = options;\n\n  assert(\n    `[validator:exclusion] [${attribute}] no options were passed in`,\n    !isEmpty(Object.keys(options)),\n  );\n\n  if (allowBlank && isEmpty(value)) {\n    return true;\n  }\n\n  if (array && array.indexOf(value) !== -1) {\n    return validationError('exclusion', value, options);\n  }\n\n  if (range && range.length === 2) {\n    const [min, max] = range;\n    const equalType =\n      typeOf(value) === typeOf(min) && typeOf(value) === typeOf(max);\n\n    if (equalType && min <= (value as number) && (value as number) <= max) {\n      return validationError('exclusion', value, options);\n    }\n  }\n\n  return true;\n}\n"],"names":["validateExclusion","value","options","model","attribute","array","in","range","allowBlank","assert","isEmpty","Object","keys","indexOf","validationError","length","min","max","equalType","typeOf"],"mappings":";;;;AAYA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,iBAAiBA,CACvCC,KAAc,EACdC,OAAiB,EACjBC,KAAa,EACbC,SAAiB,EAC2B;AAC5C,EAAA,MAAMC,KAAK,GAAGH,OAAO,CAACI,EAAE;EACxB,MAAM;IAAEC,KAAK;AAAEC,IAAAA;AAAW,GAAC,GAAGN,OAAO;AAErCO,EAAAA,MAAM,CACJ,CAAA,uBAAA,EAA0BL,SAAS,CAAA,2BAAA,CAA6B,EAChE,CAACM,OAAO,CAACC,MAAM,CAACC,IAAI,CAACV,OAAO,CAAC,CAC/B,CAAC;AAED,EAAA,IAAIM,UAAU,IAAIE,OAAO,CAACT,KAAK,CAAC,EAAE;AAChC,IAAA,OAAO,IAAI;AACb;EAEA,IAAII,KAAK,IAAIA,KAAK,CAACQ,OAAO,CAACZ,KAAK,CAAC,KAAK,EAAE,EAAE;AACxC,IAAA,OAAOa,eAAe,CAAC,WAAW,EAAEb,KAAK,EAAEC,OAAO,CAAC;AACrD;AAEA,EAAA,IAAIK,KAAK,IAAIA,KAAK,CAACQ,MAAM,KAAK,CAAC,EAAE;AAC/B,IAAA,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGV,KAAK;IACxB,MAAMW,SAAS,GACbC,MAAM,CAAClB,KAAK,CAAC,KAAKkB,MAAM,CAACH,GAAG,CAAC,IAAIG,MAAM,CAAClB,KAAK,CAAC,KAAKkB,MAAM,CAACF,GAAG,CAAC;IAEhE,IAAIC,SAAS,IAAIF,GAAG,IAAKf,KAAgB,IAAKA,KAAK,IAAegB,GAAG,EAAE;AACrE,MAAA,OAAOH,eAAe,CAAC,WAAW,EAAEb,KAAK,EAAEC,OAAO,CAAC;AACrD;AACF;AAEA,EAAA,OAAO,IAAI;AACb;;;;"}